# Upstream configuration for auto-scaling services
upstream catalog {
    # Docker Swarm will automatically load balance across replicas
    server catalog-server:5000 max_fails=3 fail_timeout=30s;
    # Additional servers will be automatically discovered by Docker Swarm
    keepalive 32;
}

upstream order {
    # Docker Swarm will automatically load balance across replicas
    server order-server:4000 max_fails=3 fail_timeout=30s;
    # Additional servers will be automatically discovered by Docker Swarm
    keepalive 32;
}

upstream client {
    server client:3007 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

server {
    listen 80;

    # Health check endpoint for nginx
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Status endpoint for monitoring
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }

    location / {
        proxy_pass http://client/;
        proxy_set_header Host $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    location /catalog-server/ {
        rewrite ^/catalog-server/(.*)$ /$1 break;
        proxy_pass http://catalog/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }

    location /order-server/ {
        rewrite ^/order-server/(.*)$ /$1 break;
        proxy_pass http://order/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }
}
